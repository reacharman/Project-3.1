// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl
// Made by Arman Kar

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=DMuxa, b=DMuxb, c=DMuxc, d=DMuxd, e=DMuxe, f=DMuxf, g=DMuxg, h=DMuxh);
    Register(in=in, load=DMuxa, out=outA);
    Register(in=in, load=DMuxb, out=outB);
    Register(in=in, load=DMuxc, out=outC);
    Register(in=in, load=DMuxd, out=outD);
    Register(in=in, load=DMuxe, out=outE);
    Register(in=in, load=DMuxf, out=outF);
    Register(in=in, load=DMuxg, out=outG);
    Register(in=in, load=DMuxh, out=outH);
    Mux8Way16(a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH, sel=address, out=out);
}
